{
  "Comment": "A description of my state machine",
  "StartAt": "Run capacity tracker pipeline",
  "States": {
    "Run capacity tracker pipeline": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Ingest Capacity Tracker data",
          "States": {
            "Ingest Capacity Tracker data": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${ingest_capacity_tracker_data_job_name}",
                "Arguments": {
                  "--source": "s3://sfc-data-engineering-raw/domain=capacity_tracker/",
                  "--destination": "${dataset_bucket_uri}/domain=capacity_tracker/"
                }
              },
              "Next": "Clean capacity tracker data"
            },
            "Clean capacity tracker data": {
              "Type": "Parallel",
                "Branches": [
                  {
                    "StartAt": "Clean capacity tracker care home data",
                    "States": {
                      "Clean capacity tracker care home data": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::glue:startJobRun.sync",
                        "Parameters": {
                          "JobName": "${clean_capacity_tracker_care_home_job_name}",
                          "Arguments": {
                            "--capacity_tracker_care_home_source": "${dataset_bucket_uri}/domain=capacity_tracker/dataset=capacity_tracker_care_home/",
                            "--cleaned_capacity_tracker_care_home_destination": "${dataset_bucket_uri}/domain=capacity_tracker/dataset=capacity_tracker_care_home_cleaned/"
                          }
                        },
                        "End": true
                      }
                    }
                  },
                  {
                    "StartAt": "Clean capacity tracker non residential data",
                    "States": {
                      "Clean capacity tracker non residential data": {
                        "Type": "Task",
                        "Resource": "arn:aws:states:::glue:startJobRun.sync",
                        "Parameters": {
                          "JobName": "${clean_capacity_tracker_non_res_job_name}",
                          "Arguments": {
                            "--capacity_tracker_non_res_source": "${dataset_bucket_uri}/domain=capacity_tracker/dataset=capacity_tracker_non_residential/",
                            "--cleaned_capacity_tracker_non_res_destination": "${dataset_bucket_uri}/domain=capacity_tracker/dataset=capacity_tracker_non_residential_cleaned/"
                          }
                        },
                        "End": true
                      }
                    }
                  }
                ],
                "Next": "Run diagnostics on capacity tracker data job"
            },
            "Run diagnostics on capacity tracker data job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${diagnostics_on_capacity_tracker_job_name}",
                "Arguments": {
                  "--estimate_filled_posts_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts/",
                  "--capacity_tracker_care_home_source": "${dataset_bucket_uri}/domain=capacity_tracker/dataset=capacity_tracker_care_home_cleaned/",
                  "--capacity_tracker_non_res_source": "${dataset_bucket_uri}/domain=capacity_tracker/dataset=capacity_tracker_non_residential_cleaned/",
                  "--care_home_diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=capacity_tracker_care_home_diagnostics/",
                  "--care_home_summary_diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=capacity_tracker_care_home_diagnostics_summary/",
                  "--non_res_diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=capacity_tracker_non_residential_diagnostics/"
                }
              },
              "Next": "Start capacity tracker validation"
            },
            "Start capacity tracker validation": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "${run_capacity_tracker_validation_state_machine_arn}",
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "Next": "Run capacity tracker crawler"
            },
            "Run capacity tracker crawler": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "arn:aws:states:eu-west-2:344210435447:stateMachine:main-RunCrawler",
                "Input": {
                  "crawler_name": "${capacity_tracker_crawler_name}",
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "Next": "Run ind cqc crawler"
            },
            "Run ind cqc crawler": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "arn:aws:states:eu-west-2:344210435447:stateMachine:main-RunCrawler",
                "Input": {
                  "crawler_name": "${ind_cqc_filled_posts_crawler_name}",
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "End": true
            }
          }
        }
      ],
      "End": true,
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish error notification",
          "ResultPath": "$.error"
        }
      ]
    },
    "Publish error notification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "Parameters": {
        "FunctionName": "${pipeline_failure_lambda_function_arn}:$LATEST",
        "Payload": {
          "Error.$": "$.error.Cause",
          "ExecutionId.$": "$$.Execution.Id",
          "StateMachineName.$": "$$.StateMachine.Name",
          "StateMachineId.$": "$$.StateMachine.Id",
          "ExecutionStartTime.$": "$$.Execution.StartTime",
          "CallbackToken.$": "$$.Task.Token"
        }
      },
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}