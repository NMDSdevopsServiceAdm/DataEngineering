{
    "Comment": "A state machine for building the full dataset from delta",
    "StartAt": "BuildDataset",
    "States": {
        "BuildDataset": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${create_snapshot_lambda_arn}",
                "Payload": {
                    "input_uri": "s3://${dataset_bucket_name}/domain=CQC/dataset=providers_api/version=3.0.0/",
                    "output_uri": "s3://${dataset_bucket_name}/domain=CQC/dataset=providers_api/latest_snapshot/",
                    "snapshot_date.$": "$$.State.EnteredTime"
                }
            },
            "Next": "CheckEquality"
        },
        "CheckEquality": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "Parameters": {
                "FunctionName": "${check_equal_lambda_arn}",
                "Payload": {
                    "left": "s3://${dataset_bucket_name}/domain=CQC/dataset=providers_api/latest_snapshot/",
                    "right.$": "States.Format('s3://sfc-main-datasets/domain=CQC/dataset=providers_api/version=2.0.0/year={}/month={}/day={}/', States.ArrayGetItem(States.StringSplit($$.State.EnteredTime, '-,T'), 0), States.ArrayGetItem(States.StringSplit($$.State.EnteredTime, '-,T'), 1), States.ArrayGetItem(States.StringSplit($$.State.EnteredTime, '-,T'), 2))",
                    "drop_cols": "mainPhoneNumber"
                }
            },
            "End": true
        }
    }
}
