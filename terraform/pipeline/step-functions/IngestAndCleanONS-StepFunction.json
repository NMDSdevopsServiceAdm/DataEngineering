{
  "Comment": "A state machine indicating the transformation steps from ingesting, cleaning and validating the ONS Postcode Directory",
  "StartAt": "ONS Postcode Directory pipeline",
  "States": {
    "ONS Postcode Directory pipeline": {
      "Type": "Parallel",
      "Next": "Run validation crawler when success",
      "Branches": [
        {
          "StartAt": "Ingest ONS data",
          "States": {
            "Ingest ONS data": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${ingest_ons_data_job_name}",
                "Arguments": {
                  "--source.$": "$.jobs.ingest_ons_dataset.source",
                  "--destination": "${dataset_bucket_uri}/domain=ONS/"
                }
              },
              "Next": "Clean and validate ingested ONS data"
            },
            "Clean and validate ingested ONS data": {
              "Type": "Parallel",
              "Next": "Validate cleaned ONS data",
              "Branches": [
                {
                  "StartAt": "Clean ONS data",
                  "States": {
                    "Clean ONS data": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${clean_ons_data_job_name}",
                        "Arguments": {
                          "--ons_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory/",
                          "--cleaned_ons_destination": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory_cleaned/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate ingested ONS data",
                  "States": {
                    "Validate ingested ONS data": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_postcode_directory_raw_data_job_name}",
                        "Arguments": {
                          "--raw_postcode_directory_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_postcode_directory_raw/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ]
            },
            "Validate cleaned ONS data": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${validate_postcode_directory_cleaned_data_job_name}",
                "Arguments": {
                  "--raw_postcode_directory_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory/",
                  "--cleaned_postcode_directory_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory_cleaned/",
                  "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_postcode_directory_cleaned/"
                }
              },
              "End": true
            }
          }
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish error notification",
          "ResultPath": "$.error"
        }
      ]
    },
    "Run validation crawler when success": {
      "Type": "Task",
      "Parameters": {
        "Name": "${data_validation_reports_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Run ONS crawler when success"
    },
    "Run ONS crawler when success": {
      "Type": "Task",
      "Parameters": {
        "Name": "${ons_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Success"
    },
    "Publish error notification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "Parameters": {
        "FunctionName": "${pipeline_failure_lambda_function_arn}:$LATEST",
        "Payload": {
          "Error.$": "$.error.Cause",
          "ExecutionId.$": "$$.Execution.Id",
          "StateMachineName.$": "$$.StateMachine.Name",
          "StateMachineId.$": "$$.StateMachine.Id",
          "ExecutionStartTime.$": "$$.Execution.StartTime",
          "CallbackToken.$": "$$.Task.Token"
        }
      },
      "Next": "Run validation crawler when failed"
    },
    "Run validation crawler when failed": {
      "Type": "Task",
      "Parameters": {
        "Name": "${data_validation_reports_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Run ONS crawler when failed"
    },
    "Run ONS crawler when failed": {
      "Type": "Task",
      "Parameters": {
        "Name": "${ons_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}
