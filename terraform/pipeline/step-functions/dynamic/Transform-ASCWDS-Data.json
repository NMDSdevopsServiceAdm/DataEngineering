{
    "Comment": "State machine for validating and cleaning ASCWDS data",
    "StartAt": "Validate ASCWDS",
    "States": {
      "Validate ASCWDS": {
        "Type": "Parallel",
        "Branches": [
          {
            "StartAt": "Validate Workplace Raw",
            "States": {
              "Validate Workplace Raw": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${validate_ascwds_workplace_raw_data_job_name}",
                  "Arguments": {
                    "--raw_ascwds_workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace/",
                    "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_workplace_raw/"
                  }
                },
                "End": true
              }
            }
          },
          {
            "StartAt": "Validate Worker Raw",
            "States": {
              "Validate Worker Raw": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${validate_ascwds_worker_raw_data_job_name}",
                  "Arguments": {
                    "--raw_ascwds_worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker/",
                    "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_worker_raw/"
                  }
                },
                "End": true
              }
            }
          }
        ],
        "Next": "Clean Workplace Data",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "Publish Error Notification",
            "ResultPath": "$.error"
          }
        ]
      },
      "Clean Workplace Data": {
        "Type": "Task",
        "Resource": "arn:aws:states:::glue:startJobRun.sync",
        "Parameters": {
          "JobName": "${clean_ascwds_workplace_job_name}",
          "Arguments": {
            "--ascwds_workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace/",
            "--cleaned_ascwds_workplace_destination": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace_cleaned/",
            "--workplace_for_reconciliation_destination": "${dataset_bucket_uri}/domain=SfC/dataset=sfc_workplace_for_reconciliation/"
          }
        },
        "Next": "Clean Worker Data"
      },
      "Clean Worker Data": {
        "Type": "Task",
        "Resource": "arn:aws:states:::glue:startJobRun.sync",
        "Parameters": {
          "JobName": "${clean_ascwds_worker_job_name}",
          "Arguments": {
            "--ascwds_worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker/",
            "--ascwds_workplace_cleaned_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace_cleaned/",
            "--ascwds_worker_destination": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker_cleaned/"
          }
        },
        "Next": "Crawl ASCWDS"
      },
      "Crawl ASCWDS": {
        "Type": "Task",
        "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
        "Parameters": {
          "Name": "${ascwds_crawler_name}"
        },
        "Next": "Validate Cleaned ASCWDS"
      },
      "Validate Cleaned ASCWDS": {
        "Type": "Parallel",
        "Branches": [
          {
            "StartAt": "Validate Cleaned Workplace",
            "States": {
              "Validate Cleaned Workplace": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${validate_ascwds_workplace_cleaned_data_job_name}",
                  "Arguments": {
                    "--cleaned_ascwds_workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace_cleaned/",
                    "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_workplace_cleaned/"
                  }
                },
                "End": true
              }
            }
          },
          {
            "StartAt": "Validate Cleaned Worker",
            "States": {
              "Validate Cleaned Worker": {
                "Type": "Task",
                "Resource": "arn:aws:states:::glue:startJobRun.sync",
                "Parameters": {
                  "JobName": "${validate_ascwds_worker_cleaned_data_job_name}",
                  "Arguments": {
                    "--cleaned_ascwds_worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker_cleaned/",
                    "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_worker_cleaned/"
                  }
                },
                "End": true
              }
            }
          }
        ],
        "Next": "Success",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "Publish Error Notification",
            "ResultPath": "$.error"
          }
        ]
      },
      "Success": {
        "Type": "Succeed"
      },
      "Publish Error Notification": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
        "Parameters": {
          "FunctionName": "${pipeline_failure_lambda_function_arn}:$LATEST",
          "Payload": {
            "Error.$": "$.error.Cause",
            "ExecutionId.$": "$$.Execution.Id",
            "StateMachineName.$": "$$.StateMachine.Name",
            "StateMachineId.$": "$$.StateMachine.Id",
            "ExecutionStartTime.$": "$$.Execution.StartTime",
            "CallbackToken.$": "$$.Task.Token"
          }
        },
        "Next": "Fail"
      },
      "Fail": {
        "Type": "Fail"
      }
    }
}
