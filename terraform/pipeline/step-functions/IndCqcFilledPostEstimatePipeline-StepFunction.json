{
  "Comment": "A state machine indicating the transformation steps from Silver -> Gold data layers for the Independent CQC filled posts pipeline",
  "StartAt": "Silver to Gold Transformation Layer",
  "States": {
    "Silver to Gold Transformation Layer": {
      "Type": "Parallel",
      "Next": "Run validation crawler when success",
      "Branches": [
        {
          "StartAt": "Merge CQC, ASC-WDS and ONS data",
          "States": {
            "Merge CQC, ASC-WDS and ONS data": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${merge_ind_cqc_data_job_name}",
                "Arguments": {
                  "--cleaned_cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api_cleaned/",
                  "--cleaned_cqc_pir_source": "${dataset_bucket_uri}/domain=CQC/dataset=pir_cleaned/",
                  "--cleaned_ascwds_workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace_cleaned/",
                  "--cleaned_ct_non_res_source": "${dataset_bucket_uri}/domain=capacity_tracker/dataset=capacity_tracker_non_residential_cleaned/",
                  "--cleaned_ct_care_home_source": "${dataset_bucket_uri}/domain=capacity_tracker/dataset=capacity_tracker_care_home_cleaned/",
                  "--destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_merged_data/"
                }
              },
              "Next": "Clean and validate merged data"
            },
            "Clean and validate merged data": {
              "Type": "Parallel",
              "Next": "Impute and validate cleaned data",
              "Branches": [
                {
                  "StartAt": "Clean IND CQC data",
                  "States": {
                    "Clean IND CQC data": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${clean_ind_cqc_filled_posts_job_name}",
                        "Arguments": {
                          "--merged_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_merged_data/",
                          "--cleaned_ind_cqc_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate merged data",
                  "States": {
                    "Validate merged data": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_merged_ind_cqc_data_job_name}",
                        "Arguments": {
                          "--cleaned_cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api_cleaned/",
                          "--merged_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_merged_data/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_ind_cqc_merged_data/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ]
            },
            "Impute and validate cleaned data": {
              "Type": "Parallel",
              "Next": "Feature engineering and validate imputed data",
              "Branches": [
                {
                  "StartAt": "Impute IND CQC data",
                  "States": {
                    "Impute IND CQC data": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${impute_ind_cqc_ascwds_and_pir_job_name}",
                        "Arguments": {
                          "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/",
                          "--imputed_ind_cqc_ascwds_and_pir_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_imputed_ascwds_and_pir/",
                          "--linear_regression_model_source": "${pipeline_resources_bucket_uri}/models/non_res_pir_linear_regression_prediction/2.0.1/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate cleaned data",
                  "States": {
                    "Validate cleaned data": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_cleaned_ind_cqc_data_job_name  }",
                        "Arguments": {
                          "--merged_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_merged_data/",
                          "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_ind_cqc_cleaned_data/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ]
            },
            "Feature engineering and validate imputed data": {
              "Type": "Parallel",
              "Next": "Estimate filled posts and validate feature engineering data",
              "Branches": [
                {
                  "StartAt": "Care home model features",
                  "States": {
                    "Care home model features": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${prepare_features_care_home_ind_cqc_job_name}",
                        "Arguments": {
                          "--ind_cqc_filled_posts_cleaned_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_imputed_ascwds_and_pir/",
                          "--care_home_ind_cqc_features_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_care_home/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Non residential model features",
                  "States": {
                    "Non residential model features": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${prepare_features_non_res_ascwds_ind_cqc_job_name}",
                        "Arguments": {
                          "--ind_cqc_filled_posts_cleaned_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_imputed_ascwds_and_pir/",
                          "--with_dormancy_features_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_non_res_ascwds_with_dormancy/",
                          "--without_dormancy_features_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_non_res_ascwds_without_dormancy/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate imputed data",
                  "States": {
                    "Validate imputed data": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_imputed_ind_cqc_ascwds_and_pir_data_job_name}",
                        "Arguments": {
                          "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/",
                          "--imputed_ind_cqc_ascwds_and_pir_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_imputed_ascwds_and_pir/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_ind_cqc_imputed_ascwds_and_pir/"
                        }
                      },
                      "ResultPath": null,
                      "End": true
                    }
                  }
                }
              ]
            },
            "Estimate filled posts and validate feature engineering data": {
              "Type": "Parallel",
              "Next": "Estimate filled posts by job role and validate estimated filled posts",
              "Branches": [
                {
                  "StartAt": "Estimate filled posts",
                  "States": {
                    "Estimate filled posts": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${estimate_ind_cqc_filled_posts_job_name}",
                        "Arguments": {
                          "--imputed_ind_cqc_data_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_imputed_ascwds_and_pir/",
                          "--care_home_features_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_care_home/",
                          "--care_home_model_source": "${pipeline_resources_bucket_uri}/models/care_home_filled_posts_prediction/6.3.0/",
                          "--non_res_with_dormancy_features_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_non_res_ascwds_with_dormancy/",
                          "--non_res_with_dormancy_model_source": "${pipeline_resources_bucket_uri}/models/non_residential_with_dormancy_prediction/5.1.0/",
                          "--non_res_without_dormancy_features_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_non_res_ascwds_without_dormancy/",
                          "--non_res_without_dormancy_model_source": "${pipeline_resources_bucket_uri}/models/non_residential_without_dormancy_prediction/4.3.0/",
                          "--estimated_ind_cqc_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts/",
                          "--ml_model_metrics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_ml_model_metrics/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate care home features",
                  "States": {
                      "Validate care home features": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_features_care_home_ind_cqc_data_job_name}",
                        "Arguments": {
                          "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/",
                          "--care_home_ind_cqc_features_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_care_home/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_ind_cqc_features_care_home/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate non-res with dormancy features",
                  "States": {
                      "Validate non-res with dormancy features": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_features_non_res_ascwds_with_dormancy_ind_cqc_data_job_name}",
                        "Arguments": {
                          "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/",
                          "--non_res_ascwds_with_dormancy_ind_cqc_features_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_non_res_ascwds_with_dormancy/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_ind_cqc_features_non_res_ascwds_with_dormancy/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate non-res without dormancy features",
                  "States": {
                      "Validate non-res without dormancy features": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_features_non_res_ascwds_without_dormancy_ind_cqc_data_job_name}",
                        "Arguments": {
                          "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/",
                          "--non_res_ascwds_without_dormancy_ind_cqc_features_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_features_non_res_ascwds_without_dormancy/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_ind_cqc_features_non_res_ascwds_without_dormancy/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ]
            },
            "Estimate filled posts by job role and validate estimated filled posts": {
              "Type": "Parallel",
              "Next": "Diagnostics and validate estimated filled posts by job role",
              "Branches": [
                {
                  "StartAt": "Estimate filled posts by job role",
                  "States": {
                    "Estimate filled posts by job role": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${estimate_ind_cqc_filled_posts_by_job_role_job_name}",
                        "Arguments": {
                          "--estimated_ind_cqc_filled_posts_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts/",
                          "--cleaned_ascwds_worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker_cleaned/",
                          "--estimated_ind_cqc_filled_posts_by_job_role_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts_by_job_role/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate estimated filled posts",
                  "States": {
                      "Validate estimated filled posts": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_estimated_ind_cqc_filled_posts_data_job_name}",
                        "Arguments": {
                          "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/",
                          "--estimated_ind_cqc_filled_posts_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_ind_cqc_estimated_filled_posts/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ]
            },
            "Diagnostics and validate estimated filled posts by job role": {
              "Type": "Parallel",
              "Next": "Archive estimates",
              "Branches": [
                {
                  "StartAt": "Run diagnostics on known filled posts job",
                  "States": {
                    "Run diagnostics on known filled posts job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${diagnostics_on_known_filled_posts_job_name}",
                        "Arguments": {
                          "--estimate_filled_posts_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts/",
                          "--diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts_diagnostics/",
                          "--summary_diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts_diagnostics_summary/",
                          "--charts_destination": "${dataset_bucket_name}"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Run diagnostics on capacity tracker job",
                  "States": {
                    "Run diagnostics on capacity tracker job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${diagnostics_on_capacity_tracker_job_name}",
                        "Arguments": {
                          "--estimate_filled_posts_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts/",
                          "--care_home_diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=capacity_tracker_care_home_diagnostics/",
                          "--care_home_summary_diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=capacity_tracker_care_home_diagnostics_summary/",
                          "--non_res_diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=capacity_tracker_non_residential_diagnostics/",
                          "--non_res_summary_diagnostics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=capacity_tracker_non_residential_diagnostics_summary/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Validate estimated filled posts by job role",
                  "States": {
                      "Validate estimated filled posts by job role": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${validate_estimated_ind_cqc_filled_posts_by_job_role_data_job_name}",
                        "Arguments": {
                          "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_cleaned_data/",
                          "--estimated_ind_cqc_filled_posts_by_job_role_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts_by_job_role/",
                          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_ind_cqc_estimated_filled_posts_by_job_role/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ]
            },
            "Archive estimates": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${archive_filled_posts_estimates_job_name}",
                "Arguments": {
                  "--estimate_ind_cqc_filled_posts_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=ind_cqc_estimated_filled_posts/",
                  "--monthly_filled_posts_archive_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=archived_monthly_filled_posts/",
                  "--annual_filled_posts_archive_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=archived_annual_filled_posts/"
                }
              },
              "End": true
            }
          }
        }
      ],
      "Comment": "A state that fully encapsulates taking data from the Silver layer and performing ETL operations to move it to the Gold layer",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish error notification",
          "ResultPath": "$.error",
          "ResultSelector": {
            "error.Type": "Glue"
          }
        }
      ]
    },
    "Run validation crawler when success": {
      "Type": "Task",
      "Parameters": {
        "Name": "${data_validation_reports_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Run Independent CQC crawler when success"
    },
    "Run Independent CQC crawler when success": {
      "Type": "Task",
      "Parameters": {
        "Name": "${ind_cqc_filled_posts_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Success"
    },
    "Publish error notification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "Parameters": {
        "FunctionName": "${pipeline_failure_lambda_function_arn}:$LATEST",
        "Payload": {
          "Error.$": "$.error.Cause",
          "ExecutionId.$": "$$.Execution.Id",
          "StateMachineName.$": "$$.StateMachine.Name",
          "StateMachineId.$": "$$.StateMachine.Id",
          "ExecutionStartTime.$": "$$.Execution.StartTime",
          "CallbackToken.$": "$$.Task.Token"
        }
      },
      "Next": "Run validation crawler when failed"
    },
    "Run validation crawler when failed": {
      "Type": "Task",
      "Parameters": {
        "Name": "${data_validation_reports_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Run Independent CQC crawler when failed"
    },
    "Run Independent CQC crawler when failed": {
      "Type": "Task",
      "Parameters": {
        "Name": "${ind_cqc_filled_posts_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}
