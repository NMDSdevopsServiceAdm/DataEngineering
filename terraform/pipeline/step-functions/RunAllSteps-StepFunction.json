{
  "Comment": "A state machine indicating the transformation steps from Bronze -> Silver -> Gold data layers, as divided by the stages",
  "StartAt": "Bronze to Silver Transformation Layer",
  "States": {
    "Bronze to Silver Transformation Layer": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Run clean ascwds workplace data job",
          "States": {
            "Run clean ascwds workplace data job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${clean_ascwds_workplace_job_name}",
                "Arguments": {
                  "--ascwds_workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace/",
                  "--ascwds_workplace_destination": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace_cleaned/"
                }
              },
              "Next": "Run clean ascwds worker data job"
            },
            "Run clean ascwds worker data job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${clean_ascwds_worker_job_name}",
                "Arguments": {
                  "--ascwds_worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker/",
                  "--ascwds_workplace_cleaned_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace_cleaned/",
                  "--ascwds_worker_destination": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker_cleaned/"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Run clean pir data job",
          "States": {
            "Run clean pir data job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${clean_cqc_pir_data_job_name}",
                "Arguments": {
                  "--cqc_pir_source": "${dataset_bucket_uri}/domain=CQC/dataset=pir/",
                  "--cleaned_cqc_pir_destination": "${dataset_bucket_uri}/domain=CQC/dataset=pir_cleaned/"
                }
              },
              "ResultPath": null,
              "End": true
            }
          }
        },
        {
          "StartAt": "Parallel",
          "States": {
            "Parallel": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "Run clean ons data job",
                  "States": {
                    "Run clean ons data job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${clean_ons_data_job_name}",
                        "Arguments": {
                          "--ons_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory/",
                          "--cleaned_ons_destination": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory_cleaned/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Run clean cqc provider data job",
                  "States": {
                    "Run clean cqc provider data job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${clean_cqc_provider_data_job_name}",
                        "Arguments": {
                          "--cqc_provider_source": "${dataset_bucket_uri}/domain=CQC/dataset=providers_api/",
                          "--cqc_provider_cleaned": "${dataset_bucket_uri}/domain=CQC/dataset=providers_api_cleaned/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ],
              "Next": "Run clean cqc locations data job"
            },
            "Run clean cqc locations data job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${clean_cqc_location_data_job_name}",
                "Arguments": {
                  "--cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api/",
                  "--cleaned_cqc_provider_source": "${dataset_bucket_uri}/domain=CQC/dataset=providers_api_cleaned/",
                  "--cleaned_ons_postcode_directory_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory_cleaned/",
                  "--cleaned_cqc_location_destination": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api_cleaned/"
                }
              },
              "End": true
            }
          }
        }
      ],
      "Next": "Silver to Gold Transformation Layer",
      "Comment": "A state that fully encapsulates taking data from the Bronze layer and performing ETL operations to move it to the Silver layer"
    },
    "Silver to Gold Transformation Layer": {
      "Type": "Parallel",
      "Next": "Success",
      "Branches": [
        {
          "StartAt": "Run merge ind cqc data job",
          "States": {
            "Run merge ind cqc data job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${merge_ind_cqc_data_job_name}",
                "Arguments": {
                  "--cleaned_cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api_cleaned/",
                  "--cleaned_cqc_pir_source": "${dataset_bucket_uri}/domain=CQC/dataset=pir_cleaned/",
                  "--cleaned_ascwds_workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace_cleaned/",
                  "--destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=merged_ind_cqc_data/"
                }
              },
              "Next": "Run clean ind cqc data job"
            },
            "Run clean ind cqc data job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${clean_ind_cqc_filled_posts_job_name}",
                "Arguments": {
                  "--merged_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=merged_ind_cqc_data/",
                  "--cleaned_ind_cqc_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=cleaned_ind_cqc_data/"
                }
              },
              "Next": "Feature engineering"
            },
            "Feature engineering": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "Run care home features job",
                  "States": {
                    "Run care home features job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${prepare_care_home_ind_cqc_features_job_name}",
                        "Arguments": {
                          "--ind_cqc_filled_posts_cleaned_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=cleaned_ind_cqc_data/",
                          "--care_home_ind_cqc_features_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=care_home_ind_cqc_features/"
                        }
                      },
                      "End": true
                    }
                  }
                },
                {
                  "StartAt": "Run non res features job",
                  "States": {
                    "Run non res features job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${prepare_non_res_ind_cqc_features_job_name}",
                        "Arguments": {
                          "--ind_cqc_filled_posts_cleaned_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=cleaned_ind_cqc_data/",
                          "--non_res_ind_cqc_features_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=non_res_ind_cqc_features/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ],
              "Next": "Run estimate ind cqc filled posts job"
            },
            "Run estimate ind cqc filled posts job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${estimate_ind_cqc_filled_posts_job_name}",
                "Arguments": {
                  "--cleaned_ind_cqc_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=cleaned_ind_cqc_data/",
                  "--care_home_features_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=care_home_ind_cqc_features/",
                  "--non_res_features_source": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=non_res_ind_cqc_features/",
                  "--care_home_model_directory": "${dataset_bucket_uri}/models/care_home_with_nursing_historical_jobs_prediction/2.1.0/",
                  "--non_res_model_directory": "${dataset_bucket_uri}/models/non_residential_with_pir_jobs_prediction/2.0.0/",
                  "--metrics_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=metrics_inc_cqc_filled_posts/",
                  "--estimated_ind_cqc_destination": "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=estimated_ind_cqc_filled_posts/"
                }
              },
              "Next": "Run estimate ind cqc filled posts by job role job"
            },
            "Run estimate ind cqc filled posts by job role job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${estimate_ind_cqc_filled_posts_by_job_role_job_name}",
                "Arguments": {
                  "--estimated_ind_cqc_filled_posts_source" : "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=estimated_ind_cqc_filled_posts/",
                  "--cleaned_ascwds_worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker_cleaned/",
                  "--estimated_ind_cqc_filled_posts_by_job_role_destination" : "${dataset_bucket_uri}/domain=ind_cqc_filled_posts/dataset=estimated_ind_cqc_filled_posts_by_job_role/"
                }
              },
              "Next": "run ind crawler"
            },
            "run ind crawler": {
              "Type": "Task",
              "Parameters": {
                "Name": "${ind_cqc_filled_posts_crawler_name}"
              },
              "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
              "End": true
            }
          }
        },
        {
          "StartAt": "Run ascwds crawler",
          "States": {
            "Run ascwds crawler": {
              "Type": "Task",
              "Parameters": {
                "Name": "${ascwds_crawler_name}"
              },
              "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
              "End": true
            }
          }
        },
        {
          "StartAt": "Run ons crawler",
          "States": {
            "Run ons crawler": {
              "Type": "Task",
              "End": true,
              "Parameters": {
                "Name": "${ons_crawler_name}"
              },
              "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler"
            }
          }
        },
        {
          "StartAt": "Run cqc crawler",
          "States": {
            "Run cqc crawler": {
              "Type": "Task",
              "End": true,
              "Parameters": {
                "Name": "${cqc_crawler_name}"
              },
              "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler"
            }
          }
        }
      ],
      "Comment": "A state that fully encapsulates taking data from the Silver layer and performing ETL operations to move it to the Gold layer"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}
