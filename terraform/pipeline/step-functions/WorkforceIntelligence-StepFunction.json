{
  "Comment": "A state machine to transform the CQC API and ASC-WDS data and trigger all downstream processes.",
  "StartAt": "Run Transforms",
  "States": {
    "Run Transforms": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Transform CQC data",
          "States": {
            "Transform CQC data": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "${transform_cqc_data_state_machine_arn}",
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Transform ASCWDS data",
          "States": {
            "Transform ASCWDS data": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution.sync:2",
              "Parameters": {
                "StateMachineArn": "${transform_ascwds_state_machine_arn}",
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "End": true
            }
          }
        }
      ],
      "Next": "Handle Error and Run Crawler",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Handle Error and Run Crawler"
        }
      ]
    },
    "Handle Error and Run Crawler": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Check if Error Exists",
          "States": {
            "Check if Error Exists": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.error",
                  "IsPresent": true,
                  "Next": "Publish Error Notification"
                }
              ],
              "Default": "No Error"
            },
            "No Error": {
              "Type": "Pass",
              "End": true
            },
            "Publish Error Notification": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
              "Parameters": {
                "FunctionName": "${pipeline_failure_lambda_function_arn}:$LATEST",
                "Payload": {
                  "Error.$": "$.error.Cause",
                  "ExecutionId.$": "$$.Execution.Id",
                  "StateMachineName.$": "$$.StateMachine.Name",
                  "StateMachineId.$": "$$.StateMachine.Id",
                  "ExecutionStartTime.$": "$$.Execution.StartTime",
                  "CallbackToken.$": "$$.Task.Token"
                }
              },
              "Next": "Fail"
            },
            "Fail": {
              "Type": "Fail"
            }
          }
        },
        {
          "StartAt": "Run Validation Crawler",
          "States": {
            "Run Validation Crawler": {
              "Type": "Task",
              "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
              "Parameters": {
                "Name": "${data_validation_reports_crawler_name}"
              },
              "End": true
            }
          }
        }
      ],
      "Next": "Downstream Pipelines"
    },
    "Downstream Pipelines": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "SfC Internal Placeholder",
          "States": {
            "SfC Internal Placeholder": {
              "Type": "Pass",
              "End": true
            }
          }
        },
        {
          "StartAt": "Ind CQC Filled Posts Pipeline",
          "States": {
            "Ind CQC Filled Posts Pipeline": {
              "Type": "Task",
              "Resource": "arn:aws:states:::states:startExecution",
              "Parameters": {
                "StateMachineArn": "${trigger_ind_cqc_pipeline_state_machine_arn}",
                "Input": {
                  "AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$": "$$.Execution.Id"
                }
              },
              "End": true
            }
          }
        }
      ],
      "End": true
    }
  }
}
