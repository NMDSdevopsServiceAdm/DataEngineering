{
  "Comment": "A description of my state machine",
  "StartAt": "Run prepare locations job",
  "States": {
    "Run prepare locations job": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Parameters": {
        "JobName": "${prepare_locations_job_name}",
        "Arguments": {
          "--workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace/",
          "--cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations-api/",
          "--cqc_provider_source": "${dataset_bucket_uri}/domain=CQC/dataset=providers-api/",
          "--pir_source": "${dataset_bucket_uri}/domain=CQC/dataset=pir/",
          "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_prepared/version=1.0.0/"
        }
      },
      "ResultPath": null,
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish failure message to SNS topic",
          "ResultPath": "$.error"
        }
      ],
      "Next": "Run Data Engineering Crawler 1"
    },
    "Run Data Engineering Crawler 1": {
      "Type": "Task",
      "Parameters": {
        "Name": "${data_engineering_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Parallel"
    },
    "Parallel": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Run feature engineering job",
          "States": {
            "Run feature engineering job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${locations_feature_engineering_job_name}",
                "Arguments": {
                  "--prepared_locations_source": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_prepared/version=1.0.0/",
                  "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_ml_features/version=1.0.0/"
                }
              },
              "Next": "Run estimate job counts job"
            },
            "Run estimate job counts job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${estimate_jobs_job_name}",
                "Arguments": {
                  "--prepared_locations_source": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_prepared/version=1.0.0/",
                  "--prepared_locations_features": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_ml_features/version=1.0.0/",
                  "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=job_estimates/version=1.0.0/",
                  "--care_home_model_directory": "${pipeline_resources_bucket_uri}/models/care_home_with_nursing_historical_jobs_prediction/"
                }
              },
              "Next": "Run job role breakdown job"
            },
            "Run job role breakdown job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${job_role_breakdown_job_name}",
                "Arguments": {
                  "--job_estimates_source": "${dataset_bucket_uri}/domain=data_engineering/dataset=job_estimates/version=1.0.0/",
                  "--worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker/",
                  "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=job_role_breakdown/version=1.0.0/"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Run prepare worker jobs",
          "States": {
            "Run prepare worker jobs": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${prepare_workers_job_name}",
                "Arguments": {
                  "--source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker/",
                  "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=worker_prepared/version=1.0.0/"
                }
              },
              "Next": "Run worker tracking job"
            },
            "Run worker tracking job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${worker_tracking_job_name}",
                "Arguments": {
                  "--source_ascwds_workplace": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace/",
                  "--source_ascwds_worker": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker/",
                  "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=worker_tracking/version=1.0.0/"
                }
              },
              "End": true
            }
          }
        }
      ],
      "Next": "Run Data Engineering Crawler 2",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish failure message to SNS topic",
          "ResultPath": "$.response"
        }
      ]
    },
    "Run Data Engineering Crawler 2": {
      "Type": "Task",
      "Next": "Success",
      "Parameters": {
        "Name": "${data_engineering_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler"
    },
    "Success": {
      "Type": "Succeed"
    },
    "Publish failure message to SNS topic": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Parameters": {
        "Message": {
          "Error.$": "$.error.Cause",
          "ExecutionId.$": "$$.Execution.Id",
          "StateMachineName.$": "$$.StateMachine.Name",
          "StateMachineId.$": "$$.StateMachine.Id",
          "ExecutionStartTime.$": "$$.ExecutionStartTime"
        },
        "TopicArn": "${pipeline_failure_sns_topic}"
      },
      "Next": "Fail",
      "ResultPath": "$.sns_publish_response"
    },
    "Fail": {
      "Type": "Fail"
    }
  }
}