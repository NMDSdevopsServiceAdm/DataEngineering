{
  "Comment": "A description of my state machine",
  "StartAt": "All Transformations",
  "States": {
    "All Transformations": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Run prepare locations job",
          "States": {
            "Run prepare locations job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${prepare_locations_job_name}",
                "Arguments": {
                  "--workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace/",
                  "--cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api/",
                  "--cqc_provider_source": "${dataset_bucket_uri}/domain=CQC/dataset=providers_api/",
                  "--pir_source": "${dataset_bucket_uri}/domain=CQC/dataset=pir/",
                  "--ons_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode-directory-denormalised/",
                  "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_prepared/version=1.0.0/"
                }
              },
              "ResultPath": null,
              "Next": "Run prepare location cleaned job"
            },
            "Run prepare location cleaned job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${prepare_locations_cleaned_job_name}",
                "Arguments": {
                  "--prepared_locations_source": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_prepared/version=1.0.0/",
                  "--prepared_locations_cleaned_destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_prepared_cleaned/version=1.0.0/"
                }
              },
              "Next": "Run Data Engineering Crawler 1"
            },
            "Run Data Engineering Crawler 1": {
              "Type": "Task",
              "Parameters": {
                "Name": "${data_engineering_crawler_name}"
              },
              "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
              "Next": "Workers and job breakdown Parallel"
            },
            "Workers and job breakdown Parallel": {
              "Type": "Parallel",
              "Branches": [
                {
                  "StartAt": "Run care home feature engineering job",
                  "States": {
                    "Run care home feature engineering job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${locations_care_home_feature_engineering_job_name}",
                        "Arguments": {
                          "--prepared_locations_source": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_prepared_cleaned/version=1.0.0/",
                          "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_ml_features_care_homes/2.0.0/"
                        }
                      },
                      "Next": "Run non res feature engineering job"
                    },
                    "Run non res feature engineering job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${locations_non_res_feature_engineering_job_name}",
                        "Arguments": {
                          "--prepared_locations_source": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_prepared_cleaned/version=1.0.0/",
                          "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=locations_ml_features_non_res/2.0.0/"
                        }
                      },
                      "Next": "Run job role breakdown job"
                    },
                    "Run job role breakdown job": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::glue:startJobRun.sync",
                      "Parameters": {
                        "JobName": "${job_role_breakdown_job_name}",
                        "Arguments": {
                          "--job_estimates_source": "${dataset_bucket_uri}/domain=data_engineering/dataset=job_estimates/version=2.0.0/",
                          "--worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker/",
                          "--destination": "${dataset_bucket_uri}/domain=data_engineering/dataset=job_role_breakdown/version=1.0.0/"
                        }
                      },
                      "End": true
                    }
                  }
                }
              ],
              "Next": "Run Data Engineering Crawler 2"
            },
            "Run Data Engineering Crawler 2": {
              "Type": "Task",
              "Parameters": {
                "Name": "${data_engineering_crawler_name}"
              },
              "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
              "End": true
            }
          }
        }
      ],
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish error notification",
          "ResultPath": "$.error"
        }
      ],
      "Next": "Success"
    },
    "Success": {
      "Type": "Succeed"
    },
    "Publish error notification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "Parameters": {
        "FunctionName": "${pipeline_failure_lambda_function_arn}:$LATEST",
        "Payload": {
          "Error.$": "$.error.Cause",
          "ExecutionId.$": "$$.Execution.Id",
          "StateMachineName.$": "$$.StateMachine.Name",
          "StateMachineId.$": "$$.StateMachine.Id",
          "ExecutionStartTime.$": "$$.Execution.StartTime",
          "CallbackToken.$": "$$.Task.Token"
        }
      },
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    }
  }
}