{
  "Comment": "A state machine for validating Silver layer data",
  "StartAt": "Silver validation",
  "States": {
    "Silver validation": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Run validate ascwds workplace cleaned data job",
          "States": {
            "Run validate ascwds workplace cleaned data job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${validate_ascwds_workplace_cleaned_data_job_name}",
                "Arguments": {
                  "--cleaned_ascwds_workplace_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=workplace_cleaned/",
                  "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=workplace_cleaned_data_report/"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Run validate ascwds worker cleaned job",
          "States": {
            "Run validate ascwds worker cleaned job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${validate_ascwds_worker_cleaned_data_job_name}",
                "Arguments": {
                  "--cleaned_ascwds_worker_source": "${dataset_bucket_uri}/domain=ASCWDS/dataset=worker_cleaned/",
                  "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=worker_cleaned_data_report/"
                }
              },
              "ResultPath": null,
              "End": true
            }
          }
        },
        {
          "StartAt": "Run validate locations api cleaned job",
          "States": {
              "Run validate locations api cleaned job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${validate_locations_api_cleaned_data_job_name}",
                "Arguments": {
                  "--raw_cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api/version=2.1.0/",
                  "--cleaned_cqc_locations_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api_cleaned/",
                  "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=locations_api_cleaned_data_report/"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Run validate providers api cleaned job",
          "States": {
              "Run validate providers api cleaned job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${validate_providers_api_cleaned_data_job_name}",
                "Arguments": {
                  "--raw_cqc_provider_source": "${dataset_bucket_uri}/domain=CQC/dataset=providers_api/version=2.0.0/",
                  "--cleaned_cqc_providers_source": "${dataset_bucket_uri}/domain=CQC/dataset=providers_api_cleaned/",
                  "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=providers_api_cleaned_data_report/"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Run validate pir cleaned job",
          "States": {
              "Run validate pir cleaned job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${validate_pir_cleaned_data_job_name }",
                "Arguments": {
                  "--cleaned_cqc_pir_source": "${dataset_bucket_uri}/domain=CQC/dataset=pir_cleaned/",
                  "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=pir_cleaned_data_report/"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "Run validate postcode directory cleaned job",
          "States": {
              "Run validate postcode directory cleaned job": {
              "Type": "Task",
              "Resource": "arn:aws:states:::glue:startJobRun.sync",
              "Parameters": {
                "JobName": "${validate_postcode_directory_cleaned_data_job_name}",
                "Arguments": {
                  "--raw_postcode_directory_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory/",
                  "--cleaned_postcode_directory_source": "${dataset_bucket_uri}/domain=ONS/dataset=postcode_directory_cleaned/",
                  "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=postcode_directory_cleaned_data_report/"
                }
              },
              "End": true
            }
          }
        }
      ],
      "Next": "StartCrawler",
      "Comment": "A state machine for validating Silver layer data",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish error notification",
          "ResultPath": "$.error"
        }
      ]
    },
    "StartCrawler": {
      "Type": "Task",
      "Parameters": {
        "Name": "${data_validation_reports_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Success",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish error notification",
          "ResultPath": "$.error"
        }
      ]
    },
    "Publish error notification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "Parameters": {
        "FunctionName": "${pipeline_failure_lambda_function_arn}:$LATEST",
        "Payload": {
          "Error.$": "$.error.Cause",
          "ExecutionId.$": "$$.Execution.Id",
          "StateMachineName.$": "$$.StateMachine.Name",
          "StateMachineId.$": "$$.StateMachine.Id",
          "ExecutionStartTime.$": "$$.Execution.StartTime",
          "CallbackToken.$": "$$.Task.Token"
        }
      },
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}