{
  "Comment": "A state machine for running and validating coverage data",
    "StartAt": "Run merge coverage data job",
  "States": {
    "Run merge coverage data job": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Parameters": {
        "JobName": "${merge_coverage_data_job_name}",
        "Arguments": {
          "--cleaned_cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api_cleaned/",
          "--workplace_for_reconciliation_source": "${dataset_bucket_uri}/domain=SfC/dataset=sfc_workplace_for_reconciliation/",
          "--cqc_ratings_source": "${dataset_bucket_uri}/domain=SfC/dataset=sfc_cqc_ratings_for_data_requests/",
          "--merged_coverage_destination": "${dataset_bucket_uri}/domain=SfC/dataset=sfc_merged_coverage_data/",
          "--reduced_coverage_destination": "${dataset_bucket_uri}/domain=SfC/dataset=sfc_monthly_coverage_data/"
        }
      },
      "Next": "Run validate merge coverage data job"
    },
    "Run validate merge coverage data job": {
      "Type": "Task",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Parameters": {
        "JobName": "${validate_merge_coverage_data_job_name}",
        "Arguments": {
          "--cleaned_cqc_location_source": "${dataset_bucket_uri}/domain=CQC/dataset=locations_api_cleaned/",
          "--merged_ind_cqc_source": "${dataset_bucket_uri}/domain=SfC/dataset=sfc_merged_coverage_data/",
          "--report_destination": "${dataset_bucket_uri}/domain=data_validation_reports/dataset=data_quality_report_merged_coverage_data/"
        }
      },
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Next": "Publish error notification",
          "ResultPath": "$.error"
        }
      ],
      "Next": "Run sfc crawler"
    },
    "Run sfc crawler": {
      "Type": "Task",
      "Parameters": {
        "Name": "{sfc_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Start validation crawler when success"
    },
    "Start validation crawler when success": {
      "Type": "Task",
      "Parameters": {
        "Name": "${data_validation_reports_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Success"
    },
    "Publish error notification": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
      "Parameters": {
        "FunctionName": "${pipeline_failure_lambda_function_arn}:$LATEST",
        "Payload": {
          "Error.$": "$.error.Cause",
          "ExecutionId.$": "$$.Execution.Id",
          "StateMachineName.$": "$$.StateMachine.Name",
          "StateMachineId.$": "$$.StateMachine.Id",
          "ExecutionStartTime.$": "$$.Execution.StartTime",
          "CallbackToken.$": "$$.Task.Token"
        }
      },
      "Next": "Start validation crawler when fail"
    },
    "Start validation crawler when fail": {
      "Type": "Task",
      "Parameters": {
        "Name": "${data_validation_reports_crawler_name}"
      },
      "Resource": "arn:aws:states:::aws-sdk:glue:startCrawler",
      "Next": "Fail"
    },
    "Fail": {
      "Type": "Fail"
    },
    "Success": {
      "Type": "Succeed"
    }
  }
}