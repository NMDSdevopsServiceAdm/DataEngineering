version: 2.1

orbs:
  aws-s3: circleci/aws-s3@3.0

jobs:
  test:
    docker:
      - image: circleci/python:3.9.6
    resource_class: small

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1.1-deps-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install system packages
          command: |
            sudo apt-get update
            sudo apt-get install -y default-jre-headless

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install --dev

      - save_cache:
          key: v1.1-deps-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs

      - run:
          name: run unit tests
          command: |
            pipenv run python -m unittest discover tests/unit

      - run:
          name: run integration tests
          command: |
            pipenv run python -m unittest discover tests/integration

  terraform-plan:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.2.1
    resource_class: small
    steps:
      - checkout
      - run:
          name: terraform plan
          command: |
            cd terraform/pipeline
            terraform init -input=false
            terraform workspace select ${CIRCLE_BRANCH} || terraform workspace new ${CIRCLE_BRANCH}
            terraform plan -out tfapply
      - store_artifacts:
          path: terraform/pipeline/tfapply
      - persist_to_workspace:
          root: .
          paths:
            - terraform/pipeline/tfapply
            - terraform/pipeline/.*
            - .

  terraform-apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:1.2.1
    resource_class: small
    steps:
      - attach_workspace:
          at: .
          
      - run:
          name: terraform apply
          command: |
            cd terraform/pipeline
            terraform apply -auto-approve tfapply

      - run:
          name: persist resource bucket name
          command: |
            cd terraform/pipeline
            terraform output -raw s3_resources_bucket_name > bucketname
      
      - persist_to_workspace:
          root: .
          paths:
            - terraform/pipeline/tfapply
            - terraform/pipeline/.*
            - .
            - terraform/pipeline/bucketname
            
  
  deploy-dependencies:
    docker:
      - image: circleci/python:3.9.6
    resource_class: small
    steps:
      - attach_workspace:
          at: .

      - run:
          name: package utils, schemas and environment
          command: |
            mkdir dependencies && zip -r dependencies/dependencies.zip utils schemas environment

      - run:
          name: load bucket name as environment variable
          command: |
            export BUCKET_NAME=$(cat terraform/pipeline/bucketname)
            echo $BUCKET_NAME

      - aws-s3/sync:
          aws-region: AWS_REGION
          from: dependencies
          to: s3://${BUCKET_NAME}

          
workflows:
  version: 2
  test-plan-approve-and-deploy-to-main:
    jobs:
      - test:
          filters:
            branches:
              only: main
      - deploy-dependencies:
          requires:
            - test
      - terraform-plan:
          requires:
            - test
      - plan-approval:
          type: approval
          requires:
            - terraform-plan
      - terraform-apply:
          requires:
            - plan-approval

  
  test-plan-and-deploy-to-dev:    
    jobs:
      - test:
          filters:
            branches:
              ignore: main
      - terraform-plan:
          requires:
            - test
      - terraform-apply:
          requires:
            - terraform-plan
      - deploy-dependencies:
          requires:
            - terraform-apply
