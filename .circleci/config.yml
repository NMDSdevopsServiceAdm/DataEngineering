version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.9.6
    resource_class: small

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1.1-deps-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install system packages
          command: |
            sudo apt-get update
            sudo apt-get install -y default-jre-headless

      - run:
          name: install dependencies
          command: |
            sudo pip install pipenv
            pipenv install --dev

      - save_cache:
          key: v1.1-deps-{{ checksum "Pipfile.lock" }}
          paths:
            - ~/.local/share/virtualenvs

      - run:
          name: run unit tests
          command: |
            pipenv run python -m unittest discover tests/unit

      - run:
          name: run integration tests
          command: |
            pipenv run python -m unittest discover tests/integration

  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            terraform workspace select ${CIRCLE_BRANCH} || terraform workspace new ${CIRCLE_BRANCH}
            terraform -chdir=terraform/pipeline init -input=false
            terraform -chdir=terraform/pipeline plan -out tfapply 
      - persist_to_workspace:
          root: .
          paths:
            - .
  apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run: # print the name of the branch we're on
          name: "What branch am I on?"
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: terraform apply
          command: |
            terraform workspace select ${CIRCLE_BRANCH} || terraform workspace new ${CIRCLE_BRANCH}
            terraform workspace list
            terraform -chdir=terraform/pipeline apply -auto-approve tfapply

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - test
      - plan-apply:
          requires:
            - test
      - apply:
          requires:
            - plan-apply